#============================================================
[ENV]
#the path of the R script for special analysis such as KS_test and SSIM
#automatically set during the running of examples/Makefile
RscriptPath = /home/sdi/Development/Z-checker/z-checker-0.1-online/R/test/data_analysis_script.R

#endianType: either LITTLE_ENDIAN_DATA or BIG_ENDIAN_DATA
#x86, x64 and arm adopt LITTLE_ENDIAN_DATA
#PowerPC (PPC), MAC OS, and KEIL C51 adopt BIG_ENDIAN_DATA
dataEndianType = LITTLE_ENDIAN_DATA

#two statuses: either PROBE (used in detecting/monitoring compression results during compression) or ANALYZER (used in gleaning the results for plotting and analysis)
#example: checkingStatus = PROBE_COMPRESSOR
#example: checkingStatus = ANALYZE_DATA
#example: chekcingStatus = COMPARE_COMPRESSOR
checkingStatus = ANALYZE_DATA
#checkingStatus = PROBE_COMPRESSOR
#checkingStatus = COMPARE_COMPRESSOR


#two options for execution mode: either ONLINE or OFFLINE;
#ONLINE means running with parallel application such as MPI programs to check the compression at runtime (the data are produced by simulations at runtime)
#OFFLINE means running separately from the user's application (the data are loaded from the files which are already in the disks)
executionMode = ONLINE


#ONLINE VISUALIZATION?
#visMode = ONLINE or OFFLINE
visMode = OFFLINE

[DATA]
#to analyze the properties of the single data set

#compute minimal value of the data set? (1:yes, 0:no)
minValue = 1
#compute maximal value of the data set?
maxValue = 1
#value range of the data set?
valueRange = 1
#average value of the data?
avgValue = 1
#compute entrpy?
entropy = 1
#compute auto correlation of the data (to check smoothness)?
autocorr = 1
#compute 3D auto correlation of the data (to check smoothness)
autocorr3D = 1
#generate coefficients of the FFT transform?
fft = 0
#generate analysis for laplace
lap = 0

[COMPARE]
#To compare two data sets (e.g., original data vs. decompressed data)

#compression time & compression rate
compressTime = 1
#decompression time & decompression rate
decompressTime = 1
#compression size
compressSize = 1

#compute minimal absolute error between the two data sets
minAbsErr = 1
#compute average absolute error between the two data sets
avgAbsErr = 1
#compute maximal absolute error between the two data sets
maxAbsErr = 1
#compute the auto correlation of the compression errors (white noises?)
errAutoCorr = 1
#compute the 3D auto correlation of the compression errors
errAutoCorr3D = 0
#compute the PDF of the absolute errors
absErrPDF = 1
#compute the PDF of the pwr errrs
pwrErrPDF = 0

#compute the value-range based minimal relative error
minRelErr = 1
#compute the value-range based average relative error
avgRelErr = 1
#compute the value-range based maximal relative error
maxRelErr = 1

#compute root mean squared error
rmse = 1
#compute normalized root mean sqaured error (NRMSE)
nrmse = 1
#compute peak signal-to-noise ratio (PSNR)
psnr = 1
#compute signal-to-noise ratio (SNR)
snr = 1

#compute the pearson correlation between the original data values and the compression errors
valErrCorr = 0

#compute the pearson correlation coefficient between the two data sets (to check five "nine"s?)
pearsonCorr = 0


#KS_test
KS_test = 0

#ssim
ssim = 0

#SSIM for Image(2D): Zhou Wang's algorithm (window size = 7)
ssimImage2D = 1

#quality of derivative preservation
#separated analysis of derivative matrices along each dimension (separted analysis has a bug)
#derivativeOrder1_sep_maxDiff = 0
#derivativeOrder1_sep_psnr = 0
#derivativeOrder1_sep_ssim = 0

#aggregated analysis of derivative matrices 
derivativeOrder1_psnr = 0
derivativeOrder2_psnr = 0
derivativeOrder1_ssim = 0
derivativeOrder2_ssim = 0

derivativeOrder1_sobolev = 1

[PLOT]
#plot the figures based on the data across different compressors or variables

#plotSliceImage refers to the offline visualization of data or slice image
plotSliceImage = 1

#plotDecSliceImage refers to the offline visualization of the decompressed data
plotDecSliceImage = 0
#compression ratios of the decompressed slice image plotting
#plotDecSliceCR is only valid when plotDecSliceImage = 1
plotDecSliceCR = 4 10 100

#extension of property_files, which are under compressors_dir/dataProperties
propertyExtension = prop

#specify which figures to be plotted
#plotAutoCorr means plotting auto correlation of the data (data property)
plotAutoCorr = 1
#plotAbsErrAutoCorr means plotting auto correlation of compression errors
plotErrAutoCorr = 1
#plotFFTAmp means plotting FFT amplitude of the original data and decompressed data
plotFFTAmp = 0
#plotEntropy means plotting the entropy
plotEntropy = 1

plotCompressionResults = 1

#plotAbsErrPDF means plotting distribution of errors
plotAbsErrPDF = 1
#compressors
compressors = sz:/home/sdi/Development/z-checker-installer/z-checker-installer/SZ/Hurricane_deft zfp:/home/sdi/Development/z-checker-installer/z-checker-installer/zfp/Hurricane
#histogramComparison
comparisonCases = tom_compressor(1E-3) tom_compressor(1E-4) tom_compressor(1E-5) tom_compressor(1E-6)

#extension of compress_result_files, which are under compressors_dir/compareData
cmpResultFileExtension = cmp

[REPORT]
#template file of the report
generateReport = 1
reportTemplateDir = ../template

##numOfErrorBoundCases refers to the number of error bounds to be selected for presenatation in the statistical analysis of compression results, e.g., distribution of errors.
##Suppose there are totally 8 error bounds: 1E-1, 1E-2, 1E-3, ...., 1E-8.
##If numOfErrorBoundCases=3, then only 1E-1, 1E-4, and 1E-7 will be selected for the presetation of distribution of errors, auto-correlation and spectrum and so on.
numOfErrorBoundCases = 3
