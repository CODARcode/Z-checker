#============================================================
[ENV]
#endianType: either LITTLE_ENDIAN_DATA or BIG_ENDIAN_DATA
#x86, x64 and arm adopt LITTLE_ENDIAN_DATA
#PowerPC (PPC), MAC OS, and KEIL C51 adopt BIG_ENDIAN_DATA
dataEndianType = LITTLE_ENDIAN_DATA

#two statuses: either PROBE (used in detecting/monitoring compression results during compression) or ANALYZER (used in gleaning the results for plotting and analysis)
#example: checkingStatus = PROBE_COMPRESSOR
#example: checkingStatus = ANALYZE_DATA
#example: chekcingStatus = COMPARE_COMPRESSOR
checkingStatus = ANALYZE_DATA

[DATA]
#to analyze the properties of the single data set

#compute minimal value of the data set? (1:yes, 0:no)
minValue = 1
#compute maximal value of the data set?
maxValue = 1
#value range of the data set?
valueRange = 1
#average value of the data?
avgValue = 1
#compute entrpy?
entropy = 1
#compute auto correlation of the data (to check smoothness)?
autocorr = 1
#generate coefficients of the FFT transform?
fft = 1

[COMPARE]
#To compare two data sets (e.g., original data vs. decompressed data)

#compression time & compression rate
compressTime = 1
#decompression time & decompression rate
decompressTime = 1
#compression size
compressSize = 1

#compute minimal absolute error between the two data sets
minAbsErr = 1
#compute average absolute error between the two data sets
avgAbsErr = 1
#compute maximal absolute error between the two data sets
maxAbsErr = 1
#compute the auto correlation of the absolute errors (white noises?)
autoCorrAbsErr = 1
#compute the PDF of the absolute errors
absErrPDF = 1
#compute the PDF of the point-wise relative errors
pwrErrPDF = 0

#compute the value-range based minimal relative error
minRelErr = 1
#compute the value-range based average relative error
avgRelErr = 1
#compute the value-range based maximal relative error
maxRelErr = 1

#compute root mean squared error
rmse = 1
#compute normalized root mean sqaured error (NRMSE)
nrmse = 1
#compute peak signal-to-noise ratio (PSNR)
psnr = 1
#compute signal-to-noise ratio (SNR)
snr = 1

#compute the correlatoin between original values and compression errors
valErrCorr = 1

#compute the pearson correlation coefficient between the two data sets (to check five "nine"s?)
pearsonCorr = 1

[PLOT]
#plot the figures based on the data across different compressors or variables

#extension of property_files, which are under compressors_dir/dataProperties
propertyExtension = prop

plotAutoCorr = 1
plotFFTAmp = 1
plotEntropy = 1

plotCompressionResults = 1

plotAbsErrPDF = 1
#compressors
compressors = sz_f:../../SZ/example sz_d:../../SZ/example zfp:../../zfp/utils

#histogramComparison
comparisonCases = sz_f(1E-2),sz_d(1E-2),zfp(1E-2) sz_f(1E-4),sz_d(1E-4),zfp(1E-4) sz_f(1E-6),sz_d(1E-6),zfp(1E-6) sz_f(1E-8),sz_d(1E-8),zfp(1E-8)

#extension of compress_result_files, which are under compressors_dir/compareData
cmpResultFileExtension = cmp

[REPORT]
#template file of the report
generateReport = 1
reportTemplateDir = ../template

#numOfErrorBoundCases refers to the number of error bounds to be selected for presenatation in the statistical analysis of compression results, e.g., distribution of errors.
#Suppose there are totally 8 error bounds: 1E-1, 1E-2, 1E-3, ...., 1E-8.
#If numOfErrorBoundCases=3, then only 1E-1, 1E-4, and 1E-7 will be selected for the presetation of distribution of errors, auto-correlation and spectrum and so on.
numOfErrorBoundCases = 3
